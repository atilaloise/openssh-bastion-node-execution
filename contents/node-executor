#!/bin/bash

set -eu
USER=$1
shift
HOST=$1
shift
CMD="$*"

PORT=${RD_NODE_SSH_PORT:-22}
RD_CONFIG_DRY_RUN=${RD_CONFIG_DRY_RUN:-"false"}


SSH_NODE_KEY_FILE=$(mktemp -t "$RD_NODE_NAME.ssh-keyfile.XXXXX")
SSH_BASTION_KEY_FILE=$(mktemp -t "bastion.ssh-keyfile.XXXXX")
trap 'rm "$SSH_NODE_KEY_FILE" "$SSH_BASTION_KEY_FILE"' EXIT



if [[ -z "${RD_CONFIG_BASTION_SSH_KEY_STORAGE_PATH:-}" ]]
then
  echo >&2 "ERROR: SSH key storage path was not configured for the bastion host."
  env|grep RD_CONFIG|sort >&2
  exit 1
fi
echo "$RD_CONFIG_BASTION_SSH_KEY_STORAGE_PATH" > "$SSH_BASTION_KEY_FILE"
BASTION_IDENTITY_FILE="$SSH_BASTION_KEY_FILE"


if [[ -n "${RD_CONFIG_SSH_KEY_STORAGE_PATH:-}" ]]
then
    echo "$RD_CONFIG_SSH_KEY_STORAGE_PATH" > "$SSH_NODE_KEY_FILE"
    NODE_IDENTITY_FILE="$SSH_NODE_KEY_FILE"
fi



sed -i 's/\r$//' $SSH_BASTION_KEY_FILE
echo >> $SSH_BASTION_KEY_FILE
sed -i 's/\r$//' $SSH_NODE_KEY_FILE
echo >> $SSH_NODE_KEY_FILE

chmod 0600 $SSH_BASTION_KEY_FILE
chmod 0600 $SSH_NODE_KEY_FILE

SSHOPTS="-p $PORT -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $RD_CONFIG_SSH_OPTIONS"


#if ssh-test is set to "true", do a dry run
if [[ "true" == "$RD_CONFIG_DRY_RUN" ]] ; then
    echo "[ssh-exec]" "$RUNSSH"
    exit 0
fi

#clean keys and password
unset RD_CONFIG_SSH_KEY_STORAGE_PATH
unset RD_NODEEXECUTOR_SSH_KEY_STORAGE_PATH
unset RD_NODEEXECUTOR_SSH_KEY_PASSPHRASE_STORAGE_PATH
unset RD_CONFIG_SSH_PASSWORD_STORAGE_PATH
unset RD_NODEEXECUTOR_SSH_PASSWORD_STORAGE_PATH

#echo "[ssh-exec]" "$RUNSSH"
ssh $SSHOPTS -o ProxyCommand="ssh -i $BASTION_IDENTITY_FILE -o LogLevel=ERROR $RD_CONFIG_BASTION_USER@$RD_CONFIG_BASTION_HOST -W %h:%p" -i $SSH_NODE_KEY_FILE $USER@$HOST $CMD
